---
import type { HTMLAttributes } from 'astro/types';
import type { Color } from '../types/color';
import type { Size } from '../types/size';
import { getInputColorClass, getInputSizeClass } from '../utils/input';

/**
 * Props for the Input component.
 */
type Props = HTMLAttributes<'input'> & {
  /**
   * The color scheme of the input.
   */
  color?: Color | undefined;
  /**
   * The size of the input.
   */
  inputSize?: Size | undefined;
  /**
   * Whether the input should have a ghost appearance.
   * @default false
   */
  ghost?: boolean | undefined;
};

const { color, inputSize, ghost, class: cssClass, ...restProps } = Astro.props;

let inputClass =
  'input validator focus:outline-none focus-visible:outline-none focus-within:outline-0';

if (cssClass) {
  inputClass += ` ${cssClass}`;
}

if (color) {
  inputClass += ` ${getInputColorClass(color)}`;
}

if (inputSize) {
  inputClass += ` ${getInputSizeClass(inputSize)}`;
}

if (ghost) {
  inputClass += ` input-ghost`;
}
---

<input class={inputClass} {...restProps} />
