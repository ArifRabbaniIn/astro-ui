---
import type { HTMLAttributes } from 'astro/types';
import type { CommonColor } from '../../../types/color';
import type { Size } from '../../../types/size';
import type { ButtonModifier, ButtonStyle } from './types';
import {
  getButtonColorClass,
  getButtonModifierClass,
  getButtonSizeClass,
  getButtonStyleClass,
} from './utils';

type Props = HTMLAttributes<'button'> & {
  color?: CommonColor | undefined;
  size?: Size | undefined;
  buttonStyle?: ButtonStyle | undefined;
  modifier?: ButtonModifier | undefined;
  active?: boolean | undefined;
};

const {
  type = 'button',
  color,
  size,
  buttonStyle,
  modifier,
  active = false,
  class: providedClass,
  ...restProps
} = Astro.props;

let cssClass = 'btn';

if (color) {
  cssClass += ` ${getButtonColorClass(color)}`;
}

if (size) {
  cssClass += ` ${getButtonSizeClass(size)}`;
}

if (buttonStyle) {
  cssClass += ` ${getButtonStyleClass(buttonStyle)}`;
}

if (modifier) {
  cssClass += ` ${getButtonModifierClass(modifier)}`;
}

if (active) {
  cssClass += ' btn-active';
}

if (providedClass) {
  cssClass += ` ${providedClass}`;
}
---

<button class={cssClass} {type} {...restProps}>
  <slot />
</button>
