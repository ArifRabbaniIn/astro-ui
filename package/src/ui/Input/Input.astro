---
import type { HTMLAttributes } from 'astro/types';
import type { CommonColor } from '../../types/color';
import type { Size } from '../../types/size';
import { getInputColorClass, getInputSizeClass } from './utils';

/**
 * Props for the Input component.
 */
type Props = HTMLAttributes<'input'> & {
  /**
   * The color scheme of the input.
   */
  color?: CommonColor | undefined;

  /**
   * The size of the input.
   */
  inputSize?: Size | undefined;

  /**
   * Whether the input should have a ghost appearance.
   * @default false
   */
  ghost?: boolean | undefined;
};

const {
  color,
  inputSize,
  ghost,
  class: providedClass,
  ...restProps
} = Astro.props;

let cssClass =
  'input validator focus:outline-none focus-visible:outline-none focus-within:outline-0';

if (color) {
  cssClass += ` ${getInputColorClass(color)}`;
}

if (inputSize) {
  cssClass += ` ${getInputSizeClass(inputSize)}`;
}

if (ghost) {
  cssClass += ` input-ghost`;
}

if (providedClass) {
  cssClass += ` ${providedClass}`;
}
---

<input class={cssClass} {...restProps} />
