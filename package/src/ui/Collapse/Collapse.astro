---
import type { HTMLTag, Polymorphic } from 'astro/types';
import type { CollapseIcon } from '../../types/collapse';
import Checkbox from '../Checkbox/Checkbox.astro';
import RadioInput from '../RadioInput/RadioInput.astro';

/**
 * Props for the AccordionItem component. Allows specifying the HTML tag to render.
 */
type Props<Tag extends HTMLTag = 'div'> = Polymorphic<{
  /**
   * The HTML tag to render the AccordionItem with.
   * @default 'div'
   */
  as: Tag;
  /**
   * The type of icon to use for the accordion trigger. Options are 'arrow' or 'plus-minus'.
   */
  triggerIcon?: CollapseIcon | undefined;

  /**
   * If true, the collapse gets opened with focus. When the element loses focus, it gets closed
   * @default 'checkbox'
   */
  mode?: 'focus' | 'checkbox' | 'radio';

  /**
   * The name attribute for the item's radio input. Used for grouping when only one accordion item should be open at a time. This must be provided, if `mode` is `radio`
   */
  name?: string;
}>;

const {
  as: Tag = 'div',
  triggerIcon,
  mode = 'checkbox',
  name,
  class: providedClass,
  ...restProps
}: Props = Astro.props;

let cssClass = 'collapse border border-base-300';

if (providedClass) {
  cssClass += ` ${providedClass}`;
}

if (triggerIcon) {
  if (triggerIcon === 'arrow') {
    cssClass += ' collapse-arrow';
  } else if (triggerIcon === 'plus-minus') {
    cssClass += ' collapse-plus';
  }
}
---

<Tag class={cssClass} tabindex="0" {...restProps}>
  {mode === 'checkbox' ? <Checkbox /> : null}
  {mode === 'radio' ? <RadioInput name={name} /> : null}
  <slot />
</Tag>
